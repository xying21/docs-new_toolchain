"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9600],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>g});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(r),g=o,b=u["".concat(c,".").concat(g)]||u[g]||d[g]||a;return r?n.createElement(b,i(i({ref:t},p),{},{components:r})):n.createElement(b,i({ref:t},p))}));function g(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},9139:(e,t,r)=>{r.r(t),r.d(t,{frontMatter:()=>l,contentTitle:()=>c,metadata:()=>s,toc:()=>p,default:()=>u});var n=r(7462),o=r(3366),a=(r(7294),r(3905)),i=["components"],l={id:"debug",title:"Tips for Debugging CKB Scripts"},c=void 0,s={unversionedId:"develop/debug",id:"develop/debug",title:"Tips for Debugging CKB Scripts",description:"CKB uses RISC-V ISA to implement VM layer and CKB VM is very different from other VMs with hard-code functionality through opcodes. Given the generalized nature of CKB VM, various languages and toolchains can be supported- every language and toolchain will be a bit different and implementers should provide appropriate documentation and support for the community.",source:"@site/docs/develop/debug.md",sourceDirName:"develop",slug:"/develop/debug",permalink:"/develop/docs/develop/debug",tags:[],version:"current",frontMatter:{id:"debug",title:"Tips for Debugging CKB Scripts"},sidebar:"Develop",previous:{title:"Transaction validation lifecycle",permalink:"/develop/docs/develop/lifecycle"},next:{title:"Tips for profiling CKB script",permalink:"/develop/docs/develop/pprof"}},p=[{value:"Error codes",id:"error-codes",children:[],level:2},{value:"Debug syscall",id:"debug-syscall",children:[],level:2},{value:"ckb-cli",id:"ckb-cli",children:[{value:"1. Generate mock-tx template",id:"1-generate-mock-tx-template",children:[],level:3},{value:"2. Modify the template",id:"2-modify-the-template",children:[],level:3},{value:"3. Complete the template",id:"3-complete-the-template",children:[],level:3},{value:"4. Verify the transaction",id:"4-verify-the-transaction",children:[],level:3}],level:2},{value:"Using VM debugger and GDB",id:"using-vm-debugger-and-gdb",children:[{value:"1. Install ckb-standalone-debugger",id:"1-install-ckb-standalone-debugger",children:[],level:3},{value:"2. Start standalone debugger",id:"2-start-standalone-debugger",children:[],level:3},{value:"3. Start GDB",id:"3-start-gdb",children:[],level:3}],level:2},{value:"Report bugs",id:"report-bugs",children:[],level:2}],d={toc:p};function u(e){var t=e.components,r=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"CKB uses RISC-V ISA to implement VM layer and CKB VM is very different from other VMs with hard-code functionality through opcodes. Given the generalized nature of CKB VM, various languages and toolchains can be supported- every language and toolchain will be a bit different and implementers should provide appropriate documentation and support for the community."),(0,a.kt)("p",null,"This document introduces several tips about debugging CKB scripts."),(0,a.kt)("h2",{id:"error-codes"},"Error codes"),(0,a.kt)("p",null,"The CKB node only reports an exit code on transaction verification failure; the most straightforward way to distinguish errors is to use a different exit code (between -128 and 127) to represent errors."),(0,a.kt)("p",null,"For example, see the default lock script error codes: ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/nervosnetwork/ckb-system-scripts/wiki/Error-codes"},"secp256k1 error codes")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"A common mistake is mixing up lock script errors and type script errors. It is recommended that remove the type script, then run again; if the error still exists, you can make sure the error is being caused by the lock script; otherwise, it is caused by the type script.")),(0,a.kt)("h2",{id:"debug-syscall"},"Debug syscall"),(0,a.kt)("p",null,"When we want to output additional information from the script; we need use the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/nervosnetwork/rfcs/blob/master/rfcs/0009-vm-syscalls/0009-vm-syscalls.md#debug"},"debug syscall"),"."),(0,a.kt)("p",null,"By default, the CKB node does not output the debug syscall message, however ",(0,a.kt)("inlineCode",{parentName:"p"},"ckb.toml")," can be configured to enable it."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"[logger]\nfilter = info,ckb-script=debug\n")),(0,a.kt)("p",null,"You can also choose to run the script under a debugging environment like ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/nervosnetwork/ckb-cli"},"ckb-cli"),", ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/xxuejie/ckb-standalone-debugger"},"VM debugger"),", or ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/jjyr/ckb-contract-tool"},"ckb-contract-tool"),"."),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"For language / toolchain developers, it is recommended that integrate ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/nervosnetwork/rfcs/blob/master/rfcs/0009-vm-syscalls/0009-vm-syscalls.md#debug"},"debug syscall")," to print the error backtrace if the language supports it. For example: if you are using Rust with ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/jjyr/ckb-contract-std"},"ckb-contract-std"),", you can see the panic location where the program crashed.")),(0,a.kt)("h2",{id:"ckb-cli"},"ckb-cli"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/nervosnetwork/ckb-cli"},"ckb-cli")," supports to generate mock transactions and verification under the debugging environment."),(0,a.kt)("h3",{id:"1-generate-mock-tx-template"},"1. Generate mock-tx template"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"ckb-cli mock-tx template --lock-arg <your lock-arg> --output-file debug-tx.json\n")),(0,a.kt)("h3",{id:"2-modify-the-template"},"2. Modify the template"),(0,a.kt)("p",null,"Add your script cell to the ",(0,a.kt)("inlineCode",{parentName:"p"},"cell_deps")," and modify the transaction structure to use a lock script or type script."),(0,a.kt)("h3",{id:"3-complete-the-template"},"3. Complete the template"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"ckb-cli mock-tx complete --tx-file debug-tx.json\n")),(0,a.kt)("p",null,"This command is used to sign the transaction with the private key according to your lock arg."),(0,a.kt)("h3",{id:"4-verify-the-transaction"},"4. Verify the transaction"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"ckb-cli mock-tx verify --tx-file debug-tx.json\n")),(0,a.kt)("p",null,"You will see the verification result and the debug output."),(0,a.kt)("p",null,"Please refer to the ","[transaction RFC]","(",(0,a.kt)("a",{parentName:"p",href:"https://github.com/nervosnetwork/rfcs/blob/master/rfcs/0022-transaction-structure/"},"https://github.com/nervosnetwork/rfcs/blob/master/rfcs/0022-transaction-structure/")," 0022-transaction-structure.md) for constructing a transaction."),(0,a.kt)("h2",{id:"using-vm-debugger-and-gdb"},"Using VM debugger and GDB"),(0,a.kt)("h3",{id:"1-install-ckb-standalone-debugger"},"1. Install ckb-standalone-debugger"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"git clone https://github.com/nervosnetwork/ckb-standalone-debugger\ncd ckb-standalone-debugger/bins\ncargo build --release\n")),(0,a.kt)("h3",{id:"2-start-standalone-debugger"},"2. Start standalone debugger"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/xxuejie/ckb-standalone-debugger"},"ckb-standalone-debugger")," supports a ckb-cli generated template. To debug a script, we indicate the script group type with ",(0,a.kt)("inlineCode",{parentName:"p"},"-g <script type>")," . This indicates the script group we want to debug with the referenced ",(0,a.kt)("inlineCode",{parentName:"p"},"-h <script hash>"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"ckb-debugger -l 0.0.0.0:2000 -g type -h <type script hash> -t debug-tx.json\n")),(0,a.kt)("h3",{id:"3-start-gdb"},"3. Start GDB"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"docker run --rm -it -v `pwd`:/code nervos/ckb-riscv-gnu-toolchain:bionic-20191012 bash\n# start gdb\nriscv64-unknown-elf-gdb <path of script binary>\n# connect to debugger server\ntarget remote <ip>:2000\n")),(0,a.kt)("p",null,"You may refer to the tutorial: ",(0,a.kt)("a",{parentName:"p",href:"https://xuejie.space/2019_07_05_introduction_to_ckb_script_programming_validation_model/"},"introduction to CKB script programming")," for more details."),(0,a.kt)("h2",{id:"report-bugs"},"Report bugs"),(0,a.kt)("p",null,"When you find security-related bugs in script, please don't post them on public issues. Instead, try to contact maintainers privately, they can be found on the ",(0,a.kt)("a",{parentName:"p",href:"https://t.me/nervos_ckb_dev"},"CKB dev telegram"),". Responsible disclosure could help maintainers, as well as prevent users from losing funds."),(0,a.kt)("p",null,"When you find security-related bugs in CKB official scripts or CKB VM, join the ",(0,a.kt)("a",{parentName:"p",href:"https://bounty.nervos.org/"},"bug bounty program")," to be rewarded for your valuable contribution!"))}u.isMDXComponent=!0}}]);