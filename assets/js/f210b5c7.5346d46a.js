"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8398],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),d=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),c=d(n),m=r,h=c["".concat(s,".").concat(m)]||c[m]||u[m]||l;return n?a.createElement(h,o(o({ref:t},p),{},{components:n})):a.createElement(h,o({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=c;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var d=2;d<l;d++)o[d]=n[d];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},8215:(e,t,n)=>{n.d(t,{Z:()=>r});var a=n(7294);const r=function(e){var t=e.children,n=e.hidden,r=e.className;return a.createElement("div",{role:"tabpanel",hidden:n,className:r},t)}},6396:(e,t,n)=>{n.d(t,{Z:()=>c});var a=n(7462),r=n(7294),l=n(2389),o=n(9443);const i=function(){var e=(0,r.useContext)(o.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e};var s=n(3616),d=n(6010);const p="tabItem_vU9c";function u(e){var t,n,a,l=e.lazy,o=e.block,u=e.defaultValue,c=e.values,m=e.groupId,h=e.className,k=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),v=null!=c?c:k.map((function(e){var t=e.props;return{value:t.value,label:t.label}})),f=(0,s.lx)(v,(function(e,t){return e.value===t.value}));if(f.length>0)throw new Error('Docusaurus error: Duplicate values "'+f.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var b=null===u?u:null!=(t=null!=u?u:null==(n=k.find((function(e){return e.props.default})))?void 0:n.props.value)?t:null==(a=k[0])?void 0:a.props.value;if(null!==b&&!v.some((function(e){return e.value===b})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+b+'" but none of its children has the corresponding value. Available values are: '+v.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var x=i(),g=x.tabGroupChoices,y=x.setTabGroupChoices,N=(0,r.useState)(b),S=N[0],w=N[1],T=[],E=(0,s.o5)().blockElementScrollPositionUntilNextRender;if(null!=m){var I=g[m];null!=I&&I!==S&&v.some((function(e){return e.value===I}))&&w(I)}var O=function(e){var t=e.currentTarget,n=T.indexOf(t),a=v[n].value;a!==S&&(E(t),w(a),null!=m&&y(m,a))},D=function(e){var t,n=null;switch(e.key){case"ArrowRight":var a=T.indexOf(e.currentTarget)+1;n=T[a]||T[0];break;case"ArrowLeft":var r=T.indexOf(e.currentTarget)-1;n=T[r]||T[T.length-1]}null==(t=n)||t.focus()};return r.createElement("div",{className:"tabs-container"},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,d.Z)("tabs",{"tabs--block":o},h)},v.map((function(e){var t=e.value,n=e.label;return r.createElement("li",{role:"tab",tabIndex:S===t?0:-1,"aria-selected":S===t,className:(0,d.Z)("tabs__item",p,{"tabs__item--active":S===t}),key:t,ref:function(e){return T.push(e)},onKeyDown:D,onFocus:O,onClick:O},null!=n?n:t)}))),l?(0,r.cloneElement)(k.filter((function(e){return e.props.value===S}))[0],{className:"margin-vert--md"}):r.createElement("div",{className:"margin-vert--md"},k.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==S})}))))}function c(e){var t=(0,l.Z)();return r.createElement(u,(0,a.Z)({key:String(t)},e))}},7507:(e,t,n)=>{n.r(t),n.d(t,{frontMatter:()=>u,contentTitle:()=>c,metadata:()=>m,toc:()=>h,default:()=>v});var a=n(7462),r=n(3366),l=(n(7294),n(3905)),o=n(4996),i=n(9960),s=n(6396),d=n(8215),p=["components"],u={id:"indexer",title:"Set Up the Lumos Indexer"},c=void 0,m={unversionedId:"develop/tools/lumos/guides/indexer",id:"develop/tools/lumos/guides/indexer",title:"Set Up the Lumos Indexer",description:"Lumos was designed on the basis of the Index-Query-Assemble pattern. The Lumos indexer polls blocks from a CKB node, indexes them and stores the indexed data in a local database to provide optimal queries.",source:"@site/docs/develop/tools/lumos/guides/indexer.md",sourceDirName:"develop/tools/lumos/guides",slug:"/develop/tools/lumos/guides/indexer",permalink:"/docs-new_toolchain/docs/develop/tools/lumos/guides/indexer",tags:[],version:"current",frontMatter:{id:"indexer",title:"Set Up the Lumos Indexer"},sidebar:"Develop",previous:{title:"Set Up the Config Manager",permalink:"/docs-new_toolchain/docs/develop/tools/lumos/guides/config"},next:{title:"Query on Cells",permalink:"/docs-new_toolchain/docs/develop/tools/lumos/guides/querycells"}},h=[{value:"Prerequisites",id:"prerequisites",children:[],level:2},{value:"Environment",id:"environment",children:[],level:2},{value:"Set Up the RocksDB Backed Indexer",id:"set-up-the-rocksdb-backed-indexer",children:[{value:"Step 1. Install the indexer package.",id:"step-1-install-the-indexer-package",children:[],level:3},{value:"Step 2. Start the indexer.",id:"step-2-start-the-indexer",children:[],level:3}],level:2},{value:"Set Up the SQL Backed Indexer",id:"set-up-the-sql-backed-indexer",children:[{value:"Step 1. Install Docker.",id:"step-1-install-docker",children:[],level:3},{value:"Step 2. Create a PostgreSQL instance.",id:"step-2-create-a-postgresql-instance",children:[],level:3},{value:"Step 3. Install dependencies for the DApp project.",id:"step-3-install-dependencies-for-the-dapp-project",children:[],level:3},{value:"Step 4. Initialize the SQL database.",id:"step-4-initialize-the-sql-database",children:[],level:3},{value:"Step 5. Start the indexer.",id:"step-5-start-the-indexer",children:[],level:3}],level:2}],k={toc:h};function v(e){var t=e.components,n=(0,r.Z)(e,p);return(0,l.kt)("wrapper",(0,a.Z)({},k,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Lumos was designed on the basis of the ",(0,l.kt)("a",{parentName:"p",href:"https://docs.nervos.org/docs/reference/cell#index-query-assemble-pattern"},"Index-Query-Assemble")," pattern. The Lumos indexer polls blocks from a CKB node, indexes them and stores the indexed data in a local database to provide optimal queries."),(0,l.kt)("p",null,"Lumos provides the following two types of indexers:"),(0,l.kt)(s.Z,{defaultValue:"rocksdb",values:[{label:"RocksDB Backed Indexer",value:"rocksdb"},{label:"SQL Backed Indexer",value:"sql"}],mdxType:"Tabs"},(0,l.kt)(d.Z,{value:"rocksdb",mdxType:"TabItem"},(0,l.kt)("p",null,"The RocksDB backed indexer is contained in the  ",(0,l.kt)("code",null,"@ckb-lumos/indexer")," package. After the ",(0,l.kt)("code",null,"@ckb-lumos/indexer")," package is installed, the RocksDB backed indexer can be used directly.")),(0,l.kt)(d.Z,{value:"sql",mdxType:"TabItem"},(0,l.kt)("p",null,"The Lumos indexer supports the latest stable versions of SQL databases for PostgreSQL and MySQL. A separate package, the ",(0,l.kt)("code",null,"@ckb-lumos/sql-indexer")," package, contains the SQL backed indexer. Specific SQL database settings are required before using the SQL backed indexer."),(0,l.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"The usage for the SQL backed indexer is not fully verified. It is still in the experimental stage."))))),(0,l.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"The Lumos indexer is based on the CKB indexer that is developed by Rust. To leverage the native Rust code without installing Rust, Lumos provides the Lumos indexer with a pre-built native module of the CKB indexer."),(0,l.kt)("p",{parentName:"div"},"For native desktop applications written in ",(0,l.kt)("em",{parentName:"p"},"Electron.js"),", you can install the pre-built native module of the CKB indexer by running the ",(0,l.kt)("b",null,"LUMOS_NODE_RUNTIME=electron npm i")," command."))),(0,l.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,l.kt)("p",null,"The following prerequisites apply for setting up the Lumos indexer:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"The development environment is set up. "),(0,l.kt)("p",{parentName:"li"},"For more information, see ",(0,l.kt)(i.Z,{to:(0,o.Z)("/docs/tools/lumos/preparation/setupsystem"),mdxType:"Link"},"Set Up the Development Environment"),"."))),(0,l.kt)("h2",{id:"environment"},"Environment"),(0,l.kt)("p",null,"The following examples are verified on Ubuntu 20.04.2. Steps on the other platforms can be adjusted accordingly."),(0,l.kt)("h2",{id:"set-up-the-rocksdb-backed-indexer"},"Set Up the RocksDB Backed Indexer"),(0,l.kt)("h3",{id:"step-1-install-the-indexer-package"},"Step 1. Install the indexer package."),(0,l.kt)("p",null,"To install the RocksDB backed indexer as a project dependency:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"cd mydapp\nyarn add @ckb-lumos/indexer\n")),(0,l.kt)("h3",{id:"step-2-start-the-indexer"},"Step 2. Start the indexer."),(0,l.kt)("p",null,"The Indexer URI is the ",(0,l.kt)("var",null,"listen_address")," configuration in the ",(0,l.kt)("inlineCode",{parentName:"p"},"ckb.toml")," file of the CKB node. The default indexer URI is ",(0,l.kt)("a",{parentName:"p",href:"http://127.0.0.1:8114"},"http://127.0.0.1:8114"),"."),(0,l.kt)("p",null,"To initialize and start the RocksDB backed indexer:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},'import { Indexer } from "@ckb-lumos/indexer";\nconst CKB_RPC = "http://127.0.0.1:8114";\nexport const INDEXER = new Indexer(CKB_RPC, "./indexed-data");\nINDEXER.startForever();\n')),(0,l.kt)("h2",{id:"set-up-the-sql-backed-indexer"},"Set Up the SQL Backed Indexer"),(0,l.kt)("h3",{id:"step-1-install-docker"},"Step 1. Install Docker."),(0,l.kt)("p",null,"Docker is required for setting up the SQL backed indexer. For more information about Docker installation, see ",(0,l.kt)("a",{parentName:"p",href:"https://docs.docker.com/engine/install/"},"Install Docker Engine"),"."),(0,l.kt)("h3",{id:"step-2-create-a-postgresql-instance"},"Step 2. Create a PostgreSQL instance."),(0,l.kt)("p",null,"To create a postgreSQL instance: "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"docker run --name postgres -e POSTGRES_USER=user -e POSTGRES_DB=lumos -e POSTGRES_PASSWORD=mypassword -d -p 5432:5432 postgres\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"--name ",(0,l.kt)("var",null,"postgres"),": The container is named as ",(0,l.kt)("var",null,"postgres"),"."),(0,l.kt)("li",{parentName:"ul"},"-e POSTGRES_USER=",(0,l.kt)("var",null,"user"),": Name the superuser account as ",(0,l.kt)("var",null,"user"),"."),(0,l.kt)("li",{parentName:"ul"},"-e POSTGRES_DB=",(0,l.kt)("var",null,"lumos"),": Name the default database as ",(0,l.kt)("var",null,"lumos"),"."),(0,l.kt)("li",{parentName:"ul"},"-e POSTGRES_PASSWORD=",(0,l.kt)("var",null,"mypassword"),": The password for the user account is ",(0,l.kt)("var",null,"mypassword"),"."),(0,l.kt)("li",{parentName:"ul"},"-p 5432:5432: Publish the container's 5432 port to the whole network of the host machine."),(0,l.kt)("li",{parentName:"ul"},"-d: Run the container in the background with ",(0,l.kt)("inlineCode",{parentName:"li"},"--detach"),".")),(0,l.kt)("h3",{id:"step-3-install-dependencies-for-the-dapp-project"},"Step 3. Install dependencies for the DApp project."),(0,l.kt)("p",null,"To install the SQL backed indexer as a dependency for a project:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"cd mydapp\nyarn add @ckb-lumos/sql-indexer@0.16.0 knex pg\n")),(0,l.kt)("h3",{id:"step-4-initialize-the-sql-database"},"Step 4. Initialize the SQL database."),(0,l.kt)("p",null,"Create the knexfile.js file under the ",(0,l.kt)("var",null,"projectName"),"/node-modules/@ckb-lumos/packages/sql-indexer folder."),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="mydapp/node-modules/@ckb-lumos/packages/sql-indexer/knexfile.js"',title:'"mydapp/node-modules/@ckb-lumos/packages/sql-indexer/knexfile.js"'},"module.exports = {\n  development: {\n    client: 'postgresql',\n    connection: {\n      database: 'lumos',\n      user:     'user',\n      password: 'mypassword'\n    },\n    pool: {\n      min: 2,\n      max: 10\n    },\n    migrations: {\n      tableName: 'knex_migrations'\n    }\n  }\n};\n")),(0,l.kt)("p",null,"Run the following command to migrate and update the local database:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"npx knex migrate:up\n")),(0,l.kt)("h3",{id:"step-5-start-the-indexer"},"Step 5. Start the indexer."),(0,l.kt)("p",null,"The Indexer URI is the ",(0,l.kt)("var",null,"listen_address")," configuration in the ",(0,l.kt)("inlineCode",{parentName:"p"},"ckb.toml")," file of the CKB node. The default indexer URI is ",(0,l.kt)("a",{parentName:"p",href:"http://127.0.0.1:8114"},"http://127.0.0.1:8114"),"."),(0,l.kt)("p",null,"To initialize and start the SQL backed indexer:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},'import { Indexer } from "@ckb-lumos/sql-indexer";\nimport { Knex } from "knex";\n\nconst knex = Knex({\n    client: "postgresql",\n    connection: {\n        host: "127.0.0.1",\n        database: "lumos",\n        password: "mypassword",\n        user: "user",\n    },\n});\nconst sqlindexer = new Indexer("http://127.0.0.1:8114", knex);\nsqlindexer.startForever();\n')))}v.isMDXComponent=!0}}]);